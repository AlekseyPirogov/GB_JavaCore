// Дисциплина: Java Core для тестировщиков
// Домашнее задание №1 "Класс Object"
// Студент: Алексей Пирогов
// Дата: 14.02.2022

// Задание 1. Разобраться с имеющимся кодом.

// Задание 2. Добавить класса Team, который будет содержать:
// - название команды;
// - массив из четырех участников - в конструкторе можно сразу всех учатников указывать;
// - метод для вывода информации обо всех членах команды;
// - метод для вывода информации о членах команды, прошедших дистанцию.

// Задание 3. Добавить класса Course (полоса препятствий), в котором будут находиться:
// - массив препятсвий;
// - метод, который будет просить команду пройти всю полосу препятствий.

// -----------------------------------------------------------------------------------
// ------------------------------- Реализация заданий --------------------------------
// -----------------------------------------------------------------------------------

// Реализация задания №1 представлена в папке Ex1_ExamplesOfCode.

// Реализация задания №2 представлена отдельными одноименными классами в папке Ex2_Team:
// - созданы четыре класса (Человек - Human, Тигр - Tiger, Собака - Dog, Робот - Robot),
// наследуемые от одного абстрактного класса. Абстрактный класс содержат реализации методов для бега
// и прыжков (методы просто ввыводят информацию о действии в консоль);
// - создан класс Team, который содержит название команды (поле nameOfTeam) и массив из
// четырёх участников (экземпляры класса Human, Tiger, Dog, Robot), у участников ограничения на бег и прыжки.
// - метод для вывод информации о всех членах команды;
// - метод для вывод информации о членах команды прошедших дистанцию;

// Реализация задания №3 представлена отдельными одноименными классами в папке Ex3.Course:
// - созданы два класса: беговая дорожка (Track) и стена (Wall), при прохождении через которые,
// участники доложны выполнять соответсвующие действия (бежать или прыгать), результат выполнения
// печатается в консоль (успешно пробежал, не смог пробежать и т.д.)
// - у препятствий есть длина (для дорожки) или высота (для стены).

// Задание 6 (*). Добавьте класс Course (полоса препятствий), в котором будут находиться:
// - массив препятствий;
// - метод, который будет просить команду пройти всю полосу.

// (*). Если участник не миог пройти одно из препятствий, то дальше по списку он препятствий не идёт

package Lesson_1_Object;

import Lesson_1_Object.Ex2_Team.ChildRunner.Robot;
import Lesson_1_Object.Ex2_Team.Team;
import Lesson_1_Object.Ex3_Course.Course;

public class JavaCore_HWApp {

    public static void main(String[] args) {

        System.out.println("============== Java Core. Lesson №1 ==============");
        System.out.println("Работа программы с использованием классов Team и Course, метод RunAndJump класса Team:\n");
        // Создание команды, вызов параметраметризированного конструктора класса Team
        Team defaultTeam = new Team("DefaultTeam");
        // Создание полосы препятствий, вызов непараметраметризированного конструктора класса Course
        Course defaultCourse = new Course("defaultCourse");

        defaultTeam.showObject();
        defaultTeam.RunAndJump(defaultCourse);
        defaultTeam.showResultParticipants();

        System.out.println("\n\nРабота программы c использованием классов Team и Course, метод doIt класса Course:\n");
        // Создание команды, вызов параметраметризированного конструктора класса Team
        System.out.println("Подбор учатников для команды \"SuperTeam\" с порядковым номером 2:\n");
        Team superTeam = new Team("SuperTeam",
                         new Robot("Robot_0001", 1, 90, 100),
                         new Robot("Robot_0002", 1, 300, 200),
                         new Robot("Robot_0003", 1, 150, 150));
        // Создание полосы препятствий, вызов параметраметризированного конструктора класса Course
        Course courseNext = new Course(3, "NextCourse");

        superTeam.showObject();
        courseNext.doIt(superTeam);
        superTeam.showResultParticipants();
    }
}
